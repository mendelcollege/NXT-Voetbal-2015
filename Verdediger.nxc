/*
prioriteiten:
1. beter de bal volgen
2. kicken als hij naar het doel richt
3. ???
4. profit!
*/

 #define LICHTSENSOR SENSOR_4
 #define AFSTANDSSENSOR SensorUS(IN_3)
 #define ZIJBUFFER 50
 #define WIT 50

void HTEnhancedIRSeekerV2(const byte  port, int &dir, int &strength)
{
  int cResp;
  byte cmdBuf[] = {0x10, 0x43};
  byte respBuf[];
  bool fSuccess;
  int i, iMax;
  long dcSigSum, dcStr;
  dir = 0;
  strength = 0;
  cResp=6;
  fSuccess = I2CBytes(port, cmdBuf, cResp, respBuf);
  if (fSuccess) {
    iMax = 0;
    for (i=1; i<5; i++) if (respBuf[i] > respBuf[iMax]) iMax = i;
    dir = iMax*2+1;
    dcSigSum = respBuf[iMax] + respBuf[5];
    if ((iMax > 0) && (respBuf[iMax-1] > respBuf[iMax]/2)) {
        dir--;
        dcSigSum += respBuf[iMax-1];
    }
    if ((iMax < 4) && (respBuf[iMax+1] > respBuf[iMax]/2)) {
        dir++;
        dcSigSum += respBuf[iMax+1];
    }
    dcSigSum *= 500; dcStr = 1;
    repeat(10) dcStr = (dcSigSum/dcStr + dcStr) / 2;  // sqrt
    strength = dcStr;
    if (strength <= 200) {
      dir = 0; strength = 0;
      cmdBuf[1] = 0x49;
      cResp=6;
      fSuccess = I2CBytes(port, cmdBuf, cResp, respBuf);
      if (fSuccess) {
        dir = respBuf[0];
        if (dir > 0) for (i=1; i<=5; i++) strength += respBuf[i];
      }
    }
  }
}


//////////////////////////////vanaf hier programmeren///////////////////////////

int beginwaarde;

int compaswaarde()
{
  return SensorHTCompass(IN_2)-beginwaarde;
/*
  if(SensorHTCompass(IN_2)-beginwaarde <= 180)
  {
   return SensorHTCompass(IN_2)-beginwaarde;
  }
  if(SensorHTCompass(IN_2)-beginwaarde > 180)
  {
   return(SensorHTCompass(IN_2)-beginwaarde)-360;
  }
  if(SensorHTCompass(IN_2)-beginwaarde <= -180)
  {
   return(SensorHTCompass(IN_2)-beginwaarde)+360;
  }
*/
}

void kicken()
{
   Off(OUT_AC);
   RotateMotor(OUT_B, -100, 25);
   RotateMotor(OUT_B, 100, 25);
}

void richten()
{
   if(compaswaarde() > 5)
   {
      OnFwd(OUT_A, 50);
      OnFwd(OUT_C, -50);
   }
   if(compaswaarde() < -5)
   {
      OnFwd(OUT_A, -50);
      OnFwd(OUT_C, 50);
   }
   if(abs(compaswaarde()) <= 5)
   {
      kicken();
   }
}

void Sturen(int richting, int afstand)
{
   if(richting < 5)
   {
      OnFwd(OUT_A, 35);
      OnFwd(OUT_C, -35);
   }
   if(richting > 5)
   {
      OnFwd(OUT_A, -35);
      OnFwd(OUT_C, 35);
   }
  /* if(richting == 5)
   {
      OnFwdSync(OUT_AC, -100, 0);
   }  */
}

void ZijLijn()
{
   TextOut(5,LCD_LINE7, "Zijlijn");
   if(AFSTANDSSENSOR < ZIJBUFFER){
      OnFwd(OUT_C, -40);
      OnFwd(OUT_A, 40);
      until(abs(compaswaarde()) < 5);
      Wait(500);
      OnFwd(OUT_AC, -100);
      Wait(500);
      Off(OUT_AC);
    }
    else if(AFSTANDSSENSOR > ZIJBUFFER){
      OnFwd(OUT_A, -40);
      OnFwd(OUT_C, 40);
      until(abs(compaswaarde()) < 5);
      Wait(500);
      OnFwd(OUT_AC, -100);
      Wait(500);
      Off(OUT_AC);
    }
}

#define TextNumOut(xPos,yPos,str,col,num)  TextOut(xPos,yPos,str);NumOut(xPos+6*col,yPos,num)

task main()
{
  int richting, afstand;
  SetSensorLowspeed(IN_1);
  SetSensorLowspeed(IN_2);
  beginwaarde = SensorHTCompass(IN_2)
  SetSensorLowspeed(IN_3);
  SetSensorLight(IN_4);

while(true)
  {
    //ClearScreen();
    HTEnhancedIRSeekerV2(IN_1, richting, afstand);
    TextNumOut(0, LCD_LINE3, "Dir:    ",4, richting);
    TextNumOut(6, LCD_LINE4, "Dis:    ",4, afstand);
    //Wait(100);
    NumOut(5, LCD_LINE5, compaswaarde());
    NumOut(20, LCD_LINE8, AFSTANDSSENSOR);
    NumOut(5, LCD_LINE8, LICHTSENSOR);
    //if(LICHTSENSOR > WIT) ZijLijn();
    if(afstand < 150)                                 //zoeken
    {
       TextOut(0, LCD_LINE7, "zoeken");
       Sturen(richting, afstand);
    }
    if(afstand > 150 && richting == 5)                //kicken
    {
       TextOut(0, LCD_LINE7, "kicken");
       richten();
    }
   }
  }
